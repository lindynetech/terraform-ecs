
resource "aws_ecs_cluster" "tf-ecs-cluster" {
  name = "tf-ecs-cluster"
}

resource "aws_ecs_task_definition" "tf-td" {
  family                = "tf-td"
  task_role_arn         = ""
  execution_role_arn    = ""
  network_mode          = "awsvpc"
  container_definitions = file("tf-td.json")
}

data "aws_ecs_container_definition" "demoapp" {
  task_definition = aws_ecs_task_definition.tf-td.id
  container_name  = "demoapp"
}

resource "aws_ecs_service" "demoapp-service" {
  name            = "demoapp-service"
  cluster         = aws_ecs_cluster.tf-ecs-cluster.id
  task_definition = aws_ecs_task_definition.tf-td.arn
  desired_count   = 2
  #iam_role        = aws_iam_role.foo.arn
  #depends_on      = [aws_iam_role_policy.foo]\
  network_configuration {
    subnets = ["subnet-2bd04425", "subnet-4bd30a6a"]
    security_groups = ["sg-08bcf9f4243642aaf"]    
  }

  ordered_placement_strategy {
    type  = "binpack"
    field = "cpu"
  }
}